{"version":3,"sources":["constants/routes.js","context/firebase.js","context/user.js","lib/firebase.js","hooks/useAuthListener.js","styles/icons.js","App.js","index.js"],"names":["DASHBOARD","LOGIN","SIGN_UP","PROFILE","FirebaseContext","createContext","UserContext","firebaseApp","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","useAuthListener","useState","JSON","parse","localStorage","getItem","user","setUser","firebase","useContext","useEffect","authLisitner","onAuthStateChanged","getAuth","authUser","setItem","stringify","removeItem","Camera","className","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","Dashboard","lazy","Login","SignUp","Profile","NotFound","App","Provider","value","fallback","path","PAGES","element","to","reactDom","render","document","getElementById"],"mappings":"qGAAA,wIAAO,IAAMA,EAAY,IACZC,EAAQ,SACRC,EAAU,UACVC,EAAU,gB,gCCHvB,6CAEaC,EAAkBC,wBAAc,O,gCCF7C,6CAEaC,EAAcD,wBAAc,O,gCCFzC,8CAiBME,EAAcC,YAVG,CACrBC,OAAQ,0CACRC,WAAY,mCACZC,UAAW,mBACXC,cAAe,+BACfC,kBAAmB,cACnBC,MAAO,8C,uICYMC,MArBf,WACI,MAAwBC,mBAASC,KAAKC,MAAMC,aAAaC,QAAQ,cAAjE,mBAAOC,EAAP,KAAaC,EAAb,KACOC,EAAYC,qBAAWpB,KAAvBmB,SAgBP,OAdAE,qBAAU,WACN,IAAMC,EAAeC,YAAmBC,YAAQL,IAAW,SAACM,GACpDA,GACAV,aAAaW,QAAQ,WAAYb,KAAKc,UAAUF,IAChDP,EAAQO,KAERV,aAAaa,WAAW,YACxBV,EAAQ,UAGhB,OAAO,kBAAMI,OAEd,IAEI,CAACL,S,eCtBCY,EAAS,kBAClB,qBAAKC,UAAU,oBAAf,SACI,sBAAKC,MAAM,6BAA6BD,UAAU,uCAAuCE,KAAK,OAAOC,QAAQ,YAAYC,OAAO,eAAhI,UACI,sBAAMC,cAAc,QAAQC,eAAe,QAAQC,YAAa,EAAGC,EAAE,qKACrE,sBAAMH,cAAc,QAAQC,eAAe,QAAQC,YAAa,EAAGC,EAAE,2CCG3EC,EAAYC,gBAAK,kBAAM,4EACvBC,EAAQD,gBAAK,kBAAM,6DACnBE,EAASF,gBAAK,kBAAM,oEACpBG,EAAUH,gBAAK,kBAAM,4EACrBI,EAAWJ,gBAAK,kBAAM,uDA+BbK,MA7Bf,WACI,IAAQ5B,EAASN,IAATM,KAER,OACI,cAAC,IAAY6B,SAAb,CAAsBC,MAAO,CAAE9B,QAA/B,SACI,cAAC,IAAD,UACI,cAAC,WAAD,CAAU+B,SAAU,cAAC,EAAD,IAApB,SACI,eAAC,IAAD,WACI,cAAC,IAAD,CACIC,KAAMC,IACNC,QAAUlC,EAAkB,cAAC,IAAD,CAAUmC,GAAIF,MAAzB,cAACT,EAAD,MAErB,cAAC,IAAD,CACIQ,KAAMC,IACNC,QAAS,cAACT,EAAD,MAEb,cAAC,IAAD,CAAOO,KAAMC,IAAeC,QAAS,cAACR,EAAD,MACrC,cAAC,IAAD,CACIM,KAAMC,IACNC,QAASlC,EAAO,cAACsB,EAAD,IAAe,cAAC,IAAD,CAAUa,GAAIF,QAEjD,cAAC,IAAD,CAAOD,KAAK,IAAIE,QAAS,cAACP,EAAD,gB,gBC3BjDS,IAASC,OACL,cAAC,IAAgBR,SAAjB,CAA0BC,MAAO,CAAC5C,iBAAlC,SACI,cAAC,EAAD,MAEFoD,SAASC,eAAe,W","file":"static/js/main.cf83b2d7.chunk.js","sourcesContent":["export const DASHBOARD = '/';\r\nexport const LOGIN = '/login';\r\nexport const SIGN_UP = '/signup';\r\nexport const PROFILE = '/p/:username';\r\nexport const NOT_FOUND = '/not-found';","import { createContext } from \"react\";\r\n\r\nexport const FirebaseContext = createContext(null);","import { createContext } from \"react\";\r\n\r\nexport const UserContext = createContext(null);","// Import the functions you need from the SDKs you need\r\nimport { initializeApp } from \"firebase/app\";\r\n//import { seedDatabase } from '../seed';\r\n// TODO: Add SDKs for Firebase products that you want to use\r\n// https://firebase.google.com/docs/web/setup#available-libraries\r\n\r\n// Your web app's Firebase configuration\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyDj3rGuMY9n-4kt8GHixk8mlHqQvgxVbhE\",\r\n  authDomain: \"myinstgram-390ff.firebaseapp.com\",\r\n  projectId: \"myinstgram-390ff\",\r\n  storageBucket: \"myinstgram-390ff.appspot.com\",\r\n  messagingSenderId: \"78129236829\",\r\n  appId: \"1:78129236829:web:3c11f743e7e36234d6b6b4\"\r\n};\r\n\r\n// Initialize Firebase\r\nconst firebaseApp = initializeApp(firebaseConfig);\r\n\r\n//seedDatabase(firebaseApp)\r\n\r\nexport {firebaseApp}\r\n","import {useState, useContext, useEffect} from 'react'\r\nimport { FirebaseContext } from '../context/firebase'\r\nimport {onAuthStateChanged, getAuth} from 'firebase/auth'\r\n\r\nfunction useAuthListener() {\r\n    const [user, setUser] = useState(JSON.parse(localStorage.getItem('authUser'))) //saving auth status to local sorage to keep user signed in on page refresh\r\n    const {firebase} = useContext(FirebaseContext)\r\n\r\n    useEffect(() => {\r\n        const authLisitner = onAuthStateChanged(getAuth(firebase), (authUser) => {\r\n            if (authUser){\r\n                localStorage.setItem('authUser', JSON.stringify(authUser))\r\n                setUser(authUser)\r\n            } else {\r\n                localStorage.removeItem('authUser')\r\n                setUser(null)\r\n            }\r\n        })\r\n        return () => authLisitner()\r\n\r\n    }, [])\r\n\r\n    return {user}\r\n}\r\n\r\nexport default useAuthListener\r\n","export const Camera = () => (\r\n    <div className=\"flex min-h-screen\">\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-12 w-12 mx-auto h-full self-center\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M3 9a2 2 0 012-2h.93a2 2 0 001.664-.89l.812-1.22A2 2 0 0110.07 4h3.86a2 2 0 011.664.89l.812 1.22A2 2 0 0018.07 7H19a2 2 0 012 2v9a2 2 0 01-2 2H5a2 2 0 01-2-2V9z\" />\r\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 13a3 3 0 11-6 0 3 3 0 016 0z\" />\r\n        </svg>\r\n    </div>\r\n)","import React, { lazy, Suspense } from 'react'\r\nimport { BrowserRouter as Router, Route, Routes, Navigate } from 'react-router-dom'\r\nimport * as PAGES from './constants/routes'\r\nimport useAuthListener from './hooks/useAuthListener'\r\nimport { UserContext } from './context/user'\r\nimport { Camera } from './styles/icons'\r\n\r\nconst Dashboard = lazy(() => import ('./pages/dashboard'));\r\nconst Login = lazy(() => import ('./pages/login'));\r\nconst SignUp = lazy(() => import ('./pages/signup'));\r\nconst Profile = lazy(() => import ('./pages/profile'));\r\nconst NotFound = lazy(() => import ('./pages/not-found'));\r\n\r\nfunction App() {\r\n    const { user } = useAuthListener();\r\n\r\n    return (\r\n        <UserContext.Provider value={{ user }}>\r\n            <Router>\r\n                <Suspense fallback={<Camera />}>\r\n                    <Routes>\r\n                        <Route \r\n                            path={PAGES.LOGIN} \r\n                            element={!user ? <Login/> : <Navigate to={PAGES.DASHBOARD} />} //navigate to dashboard if the user is signed in\r\n                        />\r\n                        <Route \r\n                            path={PAGES.SIGN_UP} \r\n                            element={<SignUp/>} //removed auto navigate to dashboard if user signed in as it resulted in data fetching issues as the user is being redirected instantaneously before their profile is created in the database and resulted in no data is retrieved from database when it's called. this auto navigate on sign up is handled in sign up page\r\n                        />\r\n                        <Route path={PAGES.PROFILE} element={<Profile/>} />\r\n                        <Route\r\n                            path={PAGES.DASHBOARD} \r\n                            element={user ? <Dashboard/> : <Navigate to={PAGES.LOGIN} />} //Require Auth \r\n                        />\r\n                        <Route path='*' element={<NotFound/>} />\r\n                    </Routes>\r\n                </Suspense>\r\n            </Router>\r\n        </UserContext.Provider>\r\n    )\r\n}\r\n\r\nexport default App\r\n","import React from 'react'\r\nimport reactDom from 'react-dom'\r\nimport App from './App'\r\nimport './index.css'\r\nimport {firebaseApp} from './lib/firebase'\r\nimport {FirebaseContext} from './context/firebase'\r\n\r\nreactDom.render(\r\n    <FirebaseContext.Provider value={{firebaseApp}}>\r\n        <App />\r\n    </FirebaseContext.Provider>\r\n    , document.getElementById('root'))"],"sourceRoot":""}