{"version":3,"sources":["components/form/formStyles.js","components/form/index.js","components/loaders.js/Spinner.js","utils/usernameCheck.js","pages/signup.js"],"names":["Content","styled","form","Title","h1","Image","img","Input","input","Button","button","width","disabled","Footer","p","Frame","div","Form","children","rest","override","css","Overlay","SpinnerLoader","className","loading","doesUsernameExist","username","a","db","getFirestore","firebaseApp","docRef","doc","getDoc","docSnap","exists","SignUp","useEffect","document","title","useState","setUsername","fullName","setFullName","email","setEmail","password","setPassword","error","setError","setLoading","user","useContext","UserContext","isValid","FirebaseContext","navigate","useNavigate","e","preventDefault","auth","getAuth","signOut","createUserWithEmailAndPassword","then","userCredential","updateProfile","displayName","setDoc","userId","uid","emailAddress","toLocaleLowerCase","following","followers","dateCreated","Date","now","defaultFollows","updateDoc","arrayUnion","PAGES","catch","errorMessage","message","Spinner","style","background","method","src","placeholder","onChange","target","value","type","onClick","handleSignup","to"],"mappings":"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","file":"static/js/9.a810304d.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const Content = styled.form`\r\n    padding: 1.5em;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    background: white;\r\n    max-width: 380px;\r\n`\r\n\r\nexport const Title = styled.h1`\r\n    \r\n`\r\n\r\nexport const Image = styled.img`\r\n    width: 150px;\r\n    margin: 0.25rem 0;\r\n`\r\n\r\nexport const Input = styled.input`\r\n    background: lightblue;\r\n    padding: 0.5rem 1rem;\r\n    margin-top: 1em;\r\n    width: 100%;\r\n    border-radius: 4px;\r\n\r\n    &:last-of-type{\r\n        margin-top: 0.5em;\r\n    }\r\n`\r\n\r\nexport const Button = styled.button`\r\n    background: #038cfc;\r\n    color: white;\r\n    font-weight: bold;\r\n    width: ${({width}) => width ? width : '100'}%;\r\n    margin-top: 0.5rem;\r\n    padding: 3px;\r\n    border-radius: 4px;\r\n\r\n    &:hover{\r\n        background: ${({disabled}) => disabled ? '#038cfc' : '#4fa4e0'};\r\n    }\r\n\r\n    opacity: ${({disabled}) => disabled ? '0.5' : '1'};\r\n    cursor: ${({disabled}) => disabled && 'unset'};\r\n    \r\n`\r\n\r\nexport const Footer = styled.p`\r\n    margin: 2em 0 1em 0;\r\n`\r\nexport const Frame = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-evenly;\r\n    max-width: 720px;\r\n    margin: 0 auto;\r\n    min-height: 100vh;\r\n`","import React from 'react'\r\nimport { Content, Title, Input, Button, Footer, Image, Frame} from './formStyles'\r\n\r\nfunction Form({children, ...rest}) {\r\n    return (\r\n        <Content {...rest}>\r\n            {children}\r\n        </Content>\r\n    )\r\n}\r\n\r\nForm.Title = function FormTitle({children, ...rest}){\r\n    return <Title {...rest}>{children}</Title>\r\n}\r\n\r\nForm.Image = function FormImage({...rest}){\r\n    return <Image {...rest} />\r\n}\r\n\r\nForm.Input = function FormInput({children, ...rest}){\r\n    return (\r\n        <Input {...rest}>{children}</Input>\r\n    )\r\n}\r\n\r\nForm.Button = function FormButton({children, ...rest}){\r\n    return <Button {...rest} >{children}</Button>\r\n}\r\n\r\nForm.Footer = function FormFooter({children, ...rest}){\r\n    return <Footer {...rest}>{children}</Footer>\r\n}\r\n\r\nForm.Frame = function FormFrame({children, ...rest}){\r\n    return <Frame {...rest}>{children}</Frame>\r\n}\r\n\r\nexport default Form\r\n","import React from 'react'\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\nimport { css } from \"@emotion/react\";\r\nimport styled from 'styled-components';\r\n\r\nconst override = css`\r\n  display: block;\r\n  margin: 0 auto;\r\n  align-self: center;\r\n`;\r\n\r\nconst Overlay = styled.div`\r\n    height: 100vh;\r\n    display: flex;\r\n`\r\n\r\nfunction SpinnerLoader() {\r\n\r\n    return (\r\n        <Overlay className=\"bg-gray-100\">\r\n            <ClipLoader loading={true} css={override} />\r\n        </Overlay>\r\n    )\r\n}\r\n\r\nexport default SpinnerLoader\r\n\r\n\r\n","import { firebaseApp } from '../lib/firebase'\r\nimport { getFirestore, doc, getDoc} from 'firebase/firestore'\r\n\r\nexport default async function doesUsernameExist(username){\r\n    const db = getFirestore(firebaseApp)\r\n    const docRef = doc(db, \"users\", username);\r\n    const docSnap = await getDoc(docRef)\r\n\r\n    // if (docSnap.exists()) {\r\n    //     console.log(\"Document data:\", docSnap.data());\r\n    // } else {\r\n    //     // doc.data() will be undefined in this case\r\n    //     console.log(\"username is valid\");\r\n    // }\r\n\r\n    return docSnap.exists()\r\n}","import React, {useEffect, useState, useContext} from 'react';\r\nimport Form from '../components/form';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport * as PAGES from '../constants/routes'\r\nimport { FirebaseContext } from '../context/firebase';\r\nimport { getAuth, createUserWithEmailAndPassword, updateProfile, signOut } from \"firebase/auth\";\r\nimport { doc, setDoc, getFirestore, arrayUnion, updateDoc} from 'firebase/firestore'\r\nimport doesUsernameExist from '../utils/usernameCheck';\r\nimport SpinnerLoader from '../components/loaders.js/Spinner';\r\nimport { UserContext } from '../context/user';\r\n\r\nexport default function SignUp() {\r\n    useEffect(() => {\r\n        document.title = 'sign up - Instagram';\r\n    }, [])\r\n\r\n    const [username, setUsername] = useState('')\r\n    const [fullName, setFullName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [error, setError] = useState('')\r\n    const [loading, setLoading] = useState(false)\r\n    const {user} = useContext(UserContext)\r\n\r\n    const isValid = password === '' || email === '' || fullName === '' || username === '';\r\n    \r\n    const {firebaseApp} = useContext(FirebaseContext)\r\n    const navigate = useNavigate()\r\n\r\n    async function handleSignup(e) {\r\n        e.preventDefault()\r\n        setLoading(true)\r\n\r\n        const db = getFirestore(firebaseApp)\r\n        const auth = getAuth(firebaseApp);\r\n\r\n        if (user){ \r\n            await signOut(auth) //signing out active user if tried to sign up with another account\r\n        } \r\n\r\n        const isDuplicatedUsername = await doesUsernameExist(username)\r\n        if(isDuplicatedUsername){\r\n            setPassword('')\r\n            setUsername('')\r\n            setError('username already in use')\r\n            return null\r\n        }  \r\n\r\n        await createUserWithEmailAndPassword(auth, email, password)\r\n            .then(async (userCredential) => {\r\n                // Signed in \r\n                const user = userCredential.user;\r\n                await updateProfile(user, {displayName: username})\r\n                .then(() => {\r\n                    setDoc(doc(db, \"users\", username), \r\n                    {\r\n                        userId: user.uid,\r\n                        username: username,\r\n                        fullName: fullName,\r\n                        emailAddress: email.toLocaleLowerCase(),\r\n                        following: ['9XjnR00NNBdIhvtUdfRbi3gKXxm1'],\r\n                        followers: [],\r\n                        dateCreated: Date.now()\r\n                    })\r\n                })\r\n                .then(() => {\r\n                    const defaultFollows = doc(db, \"users\", 'sherif')\r\n                    updateDoc(defaultFollows, {\r\n                        followers: arrayUnion(user.uid)\r\n                    })\r\n                })\r\n                .then(() => navigate(PAGES.DASHBOARD))\r\n            })\r\n            .catch((error) => {\r\n                setLoading(false)\r\n                setEmail('')\r\n                setPassword('')\r\n                //const errorCode = error.code;\r\n                const errorMessage = error.message;\r\n                setError(errorMessage)\r\n            });\r\n    }\r\n\r\n    return loading ? (\r\n        <SpinnerLoader />\r\n    ) : (\r\n        <div style={{background: '#fafafa'}}>\r\n        <Form.Frame>\r\n            <Form method=\"POST\">\r\n                <Form.Image src='./images/logo.png'/>\r\n                <Form.Input \r\n                    placeholder = \"Username\" \r\n                    onChange={(e) => setUsername(e.target.value.toLocaleLowerCase())}\r\n                    value = {username}\r\n                />\r\n                <Form.Input \r\n                    placeholder = \"Full name\" \r\n                    onChange={(e) => setFullName(e.target.value)}\r\n                    value = {fullName}\r\n                />\r\n                <Form.Input \r\n                    placeholder = \"Email Address\" \r\n                    type=\"email\"\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                    value = {email}\r\n                />\r\n                <Form.Input \r\n                    placeholder = \"Password\" \r\n                    type=\"password\" \r\n                    onChange={(e) => setPassword(e.target.value)}\r\n                    value = {password}\r\n                />\r\n                <Form.Button disabled={isValid} onClick={(e) => handleSignup(e)}>Sign Up</Form.Button>\r\n                {error && <p className=\"text-xs text-red-500 mg-to-50px mt-4\">{error}</p>} \r\n                <Form.Footer>Already a user? \r\n                    <Link to={PAGES.LOGIN}>\r\n                        <strong> Log in</strong>\r\n                    </Link>\r\n                </Form.Footer>\r\n            </Form>\r\n        </Form.Frame>\r\n        </div>\r\n    )\r\n}"],"sourceRoot":""}