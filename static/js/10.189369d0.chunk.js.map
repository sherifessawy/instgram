{"version":3,"sources":["components/form/formStyles.js","components/form/index.js","components/profile/profileStyles.js","components/profile/profile-loader.js","components/profile/profile-post-feature.js","components/profile/profile-header-feature.js","components/profile/Profile.js","pages/profile.js"],"names":["Content","styled","form","Title","h1","Image","img","Input","input","Button","button","width","disabled","Footer","p","Frame","div","Form","children","rest","Header","Posts","Icons","PostFrame","Expand","Overlay","PostLayer","CloseButton","ContactsLayer","CloseContacts","HeaderLoader","className","OpenPost","post","setUpdateProfileData","useState","expand","setExpand","handleClick","prev","reactDom","createPortal","onClick","postInfo","document","body","ShowContacts","targetContacts","profileData","followersCount","isActive","setIsActive","contacts","setContacts","a","length","getContactsDataById","getContacts","targetContactsText","following","map","contact","Profile","src","username","alt","fullName","user","userId","activeUser","setProfileData","posts","setPosts","updateProfileData","useEffect","getUserDataByusername","res","getUserData","getPosts","profilePosts","res2","style","background","activeUserId","activeUsername","isFollowedUser","setIsFollowedUser","setFollowersCount","firebaseApp","useContext","FirebaseContext","db","getFirestore","profileRef","doc","activeUserRef","updateDoc","followers","arrayRemove","arrayUnion","followBtnText","includes","onError","e","target","onerror","toggleFollow","renderPosts","setRenderPosts","allPosts","imageSrc","caption","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","likes","comments","photoId","useUserData","profileName","useParams"],"mappings":"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","file":"static/js/10.189369d0.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const Content = styled.form`\r\n    padding: 1.5em;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    background: white;\r\n    max-width: 380px;\r\n`\r\n\r\nexport const Title = styled.h1`\r\n    \r\n`\r\n\r\nexport const Image = styled.img`\r\n    width: 150px;\r\n    margin: 0.25rem 0;\r\n`\r\n\r\nexport const Input = styled.input`\r\n    background: lightblue;\r\n    padding: 0.5rem 1rem;\r\n    margin-top: 1em;\r\n    width: 100%;\r\n    border-radius: 4px;\r\n\r\n    &:last-of-type{\r\n        margin-top: 0.5em;\r\n    }\r\n`\r\n\r\nexport const Button = styled.button`\r\n    background: #038cfc;\r\n    color: white;\r\n    font-weight: bold;\r\n    width: ${({width}) => width ? width : '100'}%;\r\n    margin-top: 0.5rem;\r\n    padding: 3px;\r\n    border-radius: 4px;\r\n\r\n    &:hover{\r\n        background: ${({disabled}) => disabled ? '#038cfc' : '#4fa4e0'};\r\n    }\r\n\r\n    opacity: ${({disabled}) => disabled ? '0.5' : '1'};\r\n    cursor: ${({disabled}) => disabled && 'unset'};\r\n    \r\n`\r\n\r\nexport const Footer = styled.p`\r\n    margin: 2em 0 1em 0;\r\n`\r\nexport const Frame = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-evenly;\r\n    max-width: 720px;\r\n    margin: 0 auto;\r\n    min-height: 100vh;\r\n`","import React from 'react'\r\nimport { Content, Title, Input, Button, Footer, Image, Frame} from './formStyles'\r\n\r\nfunction Form({children, ...rest}) {\r\n    return (\r\n        <Content {...rest}>\r\n            {children}\r\n        </Content>\r\n    )\r\n}\r\n\r\nForm.Title = function FormTitle({children, ...rest}){\r\n    return <Title {...rest}>{children}</Title>\r\n}\r\n\r\nForm.Image = function FormImage({...rest}){\r\n    return <Image {...rest} />\r\n}\r\n\r\nForm.Input = function FormInput({children, ...rest}){\r\n    return (\r\n        <Input {...rest}>{children}</Input>\r\n    )\r\n}\r\n\r\nForm.Button = function FormButton({children, ...rest}){\r\n    return <Button {...rest} >{children}</Button>\r\n}\r\n\r\nForm.Footer = function FormFooter({children, ...rest}){\r\n    return <Footer {...rest}>{children}</Footer>\r\n}\r\n\r\nForm.Frame = function FormFrame({children, ...rest}){\r\n    return <Frame {...rest}>{children}</Frame>\r\n}\r\n\r\nexport default Form\r\n","import styled from \"styled-components\";\r\n\r\nexport const Content = styled.div`\r\n    max-width: 1024px;\r\n    margin: 0 auto;\r\n    padding: 3em 0;\r\n    min-height: 90vh;\r\n    \r\n`\r\n\r\nexport const Header = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    margin: 0 auto 3em;\r\n    padding-bottom: 4em;\r\n    border-bottom: 1px solid grey;\r\n    max-width: 95%;\r\n\r\n    img{\r\n        border-radius: 50%;\r\n        width: 200px;\r\n        margin-right: 8em;\r\n    }\r\n\r\n    div div p{\r\n        margin-right: 1em;\r\n        font-size: 1.4rem;\r\n    }\r\n\r\n    .contacts{\r\n        &:hover{\r\n            text-decoration: underline;\r\n            cursor: pointer;\r\n        }\r\n    }\r\n\r\n    @media(max-width: 600px){\r\n        img{\r\n            margin-right: unset;\r\n            padding: 2em;\r\n            width: 140px;\r\n        }\r\n\r\n        div div p{\r\n            margin-right: 0.5em;\r\n            font-size: 1rem;\r\n        }\r\n    }\r\n`\r\n\r\nexport const Posts = styled.div`\r\n    display: grid;\r\n    grid-template-columns: repeat( auto-fit, minmax(250px, 1fr) );\r\n    grid-gap: 30px;\r\n    position: relative;\r\n    \r\n    img{\r\n        cursor: pointer;\r\n\r\n        &:hover{\r\n            \r\n        }\r\n    }\r\n\r\n    h2{\r\n        text-align: center;\r\n        font-size: 3rem;\r\n        margin-top: 3rem;\r\n        color: grey;\r\n    }\r\n`\r\n\r\nexport const Icons = styled.div`\r\n    position: absolute;\r\n    top: 45%;\r\n    right: 25%;\r\n    \r\n    div{\r\n        transform: scale(1.5, 1.5);\r\n        padding-right: 30px;\r\n        P{\r\n            margin-left: 5px;\r\n        }\r\n    }\r\n\r\n    p{\r\n        color: white;\r\n    }\r\n`\r\nexport const PostFrame = styled.div`\r\n    position: relative;\r\n\r\n    ${Icons}{\r\n        display: none;\r\n    }\r\n\r\n    &:hover{\r\n        ${Icons}{\r\n            display: flex;\r\n        }\r\n    }\r\n`\r\n\r\n//profile-post-feature styles\r\n\r\nexport const Expand = styled.div`\r\n    background: rgba(0,0,0,0);\r\n    position: absolute;\r\n    top: 0;\r\n    bottom: 0;\r\n    left: 0;\r\n    right: 0;\r\n    cursor: pointer;\r\n    \r\n    &:hover{\r\n        background: rgba(0,0,0,0.1);\r\n    }\r\n`\r\n\r\nexport const Overlay = styled.div`\r\n    background: rgba(0,0,0,0.6);\r\n    position: fixed;\r\n    top: 0;\r\n    bottom: 0;\r\n    left: 0;\r\n    right: 0;\r\n    min-height: 100vh;\r\n`\r\n\r\nexport const PostLayer = styled.div`\r\n    max-width: 95%;\r\n    z-index: 10;\r\n    position: fixed;\r\n    top: 50%;\r\n    transform: translateY(-50%) scale(0.8, 0.8);\r\n    right: 0;\r\n    left: 0;\r\n    margin: auto;\r\n    \r\n    @media(min-width: 400px){\r\n        max-width: 400px;\r\n    }\r\n`\r\n\r\nexport const CloseButton = styled.div`\r\n    position: absolute;\r\n    font-size: 2rem;\r\n    font-weight: bold;\r\n    top: 9px;\r\n    left: 350px;\r\n    right: 0;\r\n    cursor: pointer;\r\n    &:hover{\r\n        color: grey;\r\n    }\r\n\r\n    @media(max-width: 400px){\r\n        left: 320px;\r\n    }\r\n`\r\n\r\n// profile-header-feature styles\r\n\r\nexport const ContactsLayer = styled.div`\r\n    z-index: 10;\r\n    padding: 2em 1.5em;\r\n    border-radius: 15px;\r\n    position: fixed;\r\n    background: white;\r\n    top: 5%;\r\n    left: 0;\r\n    right: 0;\r\n    max-width: 400px;\r\n   \r\n    margin: 0 auto;\r\n    max-height: 480px;\r\n    overflow: auto;\r\n\r\n    .contacts-text{\r\n        font-weight: bold;\r\n        text-align: center;\r\n        background: grey;\r\n        border-radius: 20px;\r\n        color: white;\r\n        margin-bottom: 3em;\r\n    }\r\n`\r\n\r\nexport const CloseContacts = styled.div`\r\n    position: absolute;\r\n    text-align: center;\r\n    font-size: 1rem;\r\n    font-weight: bold;\r\n    z-index: 11;\r\n    top: 65px;\r\n    left: 0;\r\n    right: 0;\r\n    margin: 0 auto;\r\n    max-width: 352px;\r\n    border-radius: 20px;\r\n    color: white;\r\n    background: maroon;\r\n    cursor: pointer;\r\n    &:hover{\r\n        color: grey;\r\n    }\r\n`","import React from 'react'\r\nimport { Facebook } from 'react-content-loader';\r\nimport 'react-loading-skeleton/dist/skeleton.css'\r\n\r\nexport function HeaderLoader() {\r\n    return (\r\n          <div className='p-4'>\r\n              <Facebook />\r\n          </div> \r\n    )\r\n}\r\n\r\n   ","import React, {useState} from 'react'\r\nimport reactDom from 'react-dom'\r\nimport {Overlay, Expand, CloseButton, PostLayer} from './profileStyles'\r\nimport Post from '../post'\r\n\r\nexport function OpenPost({post, setUpdateProfileData}) {\r\n    const [expand, setExpand] = useState(false)\r\n\r\n    function handleClick(){\r\n        setExpand(false)\r\n        setUpdateProfileData(prev => !prev)\r\n    }\r\n    return expand ? (\r\n        reactDom.createPortal(\r\n            <>\r\n                <Overlay onClick={() => handleClick()} />\r\n                <PostLayer>\r\n                    <Post postInfo={post}/>\r\n                    <CloseButton onClick={() => handleClick()}>x</CloseButton>\r\n                </PostLayer>\r\n            </>\r\n        ,document.body)\r\n    ) : (\r\n        <Expand onClick={() => setExpand(true)} />\r\n    )\r\n}\r\n","import React, {useState} from 'react'\r\nimport reactDom from 'react-dom'\r\nimport {Overlay, CloseContacts, ContactsLayer} from './profileStyles'\r\nimport Sidebar from '../sidebar'\r\nimport { getContactsDataById } from '../../utils/getUserData'\r\n\r\nexport function ShowContacts({targetContacts, profileData, followersCount}) {\r\n    const [isActive, setIsActive] = useState(false)\r\n    const [contacts, setContacts] = useState([])\r\n\r\n    async function handleClick(){\r\n        if (profileData[targetContacts].length === 0) {return null} //no followers or following\r\n        const getContacts = await getContactsDataById(profileData[targetContacts])\r\n        setContacts(getContacts)\r\n        setIsActive(true)\r\n    }\r\n\r\n    const targetContactsText = targetContacts === \"followers\" ? (\r\n            <><strong>{followersCount}</strong> followers</> \r\n        ):(\r\n            <><strong>{profileData.following.length}</strong> following</> \r\n        ) \r\n\r\n    return (\r\n        <>\r\n            <p \r\n                onClick={() => handleClick()}\r\n                className='contacts'\r\n            >\r\n                {targetContactsText}\r\n            </p> \r\n            {isActive && (\r\n                reactDom.createPortal(\r\n                    <>\r\n                        <Overlay onClick={() =>  setIsActive(false)}/>\r\n                        <ContactsLayer >\r\n                            <p className='contacts-text'>{targetContacts}</p>\r\n                            {contacts.map( contact => (\r\n                                <Sidebar.Profile\r\n                                    onClick={() =>  setIsActive(false)}\r\n                                    key={contact.userId} \r\n                                    src={`/images/avatars/${contact.username}.jpg`} \r\n                                    alt={`${contact.fullName} photo`}\r\n                                    user={contact}\r\n                                />\r\n                            ))}\r\n                             <CloseContacts onClick={() =>setIsActive(false)}>close</CloseContacts>\r\n                        </ContactsLayer>\r\n                    </>\r\n                ,document.body)\r\n            )}\r\n        </>\r\n\r\n    )\r\n}\r\n","import React, {useState, useEffect, useContext} from 'react'\r\nimport {Content, Header, Posts, Icons, PostFrame} from './profileStyles'\r\nimport { getUserDataByusername } from '../../utils/getUserData'\r\nimport {profilePosts} from '../../utils/get-post-data'\r\nimport Form from '../form'\r\nimport { FirebaseContext } from '../../context/firebase'\r\nimport {getFirestore, doc, updateDoc, arrayUnion, arrayRemove} from 'firebase/firestore'\r\nimport {HeaderLoader} from './profile-loader'\r\nimport { OpenPost } from './profile-post-feature'\r\nimport {ShowContacts} from './profile-header-feature'\r\n\r\nfunction Profile({username, activeUser}) {\r\n    const [profileData, setProfileData] = useState()\r\n    const [posts, setPosts] = useState()\r\n    const [updateProfileData, setUpdateProfileData] = useState(false)\r\n    \r\n    useEffect(() => {\r\n        async function getUserData(){\r\n            const res = await getUserDataByusername(username)\r\n            setProfileData(res)\r\n        }\r\n        getUserData()\r\n    }, [username, updateProfileData])\r\n    \r\n    useEffect(() => {\r\n        if (profileData && profileData.userId){\r\n            async function getPosts(){\r\n                const res2 = await profilePosts(profileData.userId)\r\n                setPosts(res2)\r\n            }\r\n            getPosts()\r\n        }\r\n    }, [profileData, updateProfileData])\r\n\r\n    \r\n\r\n    return (\r\n        <div style={{background: '#fafafa'}}>\r\n            <Content>\r\n                <Profile.Header \r\n                    profileData={profileData} \r\n                    posts={posts} \r\n                    activeUserId={activeUser.userId} \r\n                    activeUsername={activeUser.username}\r\n                    setUpdateProfileData={setUpdateProfileData}\r\n                />\r\n                <Profile.Posts posts={posts} setUpdateProfileData={setUpdateProfileData}/>\r\n            </Content>\r\n        </div>\r\n    )\r\n}\r\n\r\nProfile.Header = function ProfileHeader({profileData, activeUserId, activeUsername, posts = [], setUpdateProfileData}){\r\n    const [isFollowedUser, setIsFollowedUser] = useState(false)\r\n    const [followersCount, setFollowersCount] = useState(0)\r\n    \r\n    const {firebaseApp} = useContext(FirebaseContext)\r\n    async function toggleFollow(){\r\n        const db = getFirestore(firebaseApp)\r\n        const profileRef = doc(db, \"users\", profileData.username)\r\n        const activeUserRef = doc(db, \"users\", activeUsername)\r\n        if(isFollowedUser){\r\n            setIsFollowedUser(false)\r\n            setFollowersCount(prev => prev-1)\r\n            await updateDoc(profileRef, {\r\n                followers: arrayRemove(activeUserId)\r\n            })\r\n            await updateDoc(activeUserRef, {\r\n                following: arrayRemove(profileData.userId)\r\n            })\r\n        } else{\r\n            setIsFollowedUser(true)\r\n            setFollowersCount(prev => prev+1)\r\n            await updateDoc(profileRef, {\r\n                followers: arrayUnion(activeUserId)\r\n            })\r\n            await updateDoc(activeUserRef, {\r\n                following: arrayUnion(profileData.userId)\r\n            })\r\n        }\r\n        setUpdateProfileData(prev => !prev) //update profile after doing the database query\r\n    }\r\n    \r\n    const followBtnText = isFollowedUser ? 'Unfollow' : 'Follow'\r\n\r\n    useEffect(() => {\r\n        if(profileData && profileData.followers.includes(activeUserId) && !isFollowedUser){\r\n            setIsFollowedUser(true)\r\n        }\r\n        if(profileData && profileData.followers){\r\n            setFollowersCount(profileData.followers.length)\r\n        }\r\n    }, [profileData, activeUserId])\r\n    \r\n    return profileData ? (\r\n            <Header>\r\n                <img \r\n                    src={`/images/avatars/${profileData.username}.jpg`}\r\n                    onError={(e)=>{e.target.onerror = null; e.target.src=\"/images/avatars/blank.png\"}} \r\n                    alt={`${profileData.username} profile`}\r\n                />\r\n                <div className='flex flex-col justify-between h-40 phone:h-28 phone:justify-center'>\r\n                    <div className='flex'>\r\n                        <p className='text-4xl font-bold'>{profileData.username}</p>\r\n                        {(profileData.username !== activeUsername && activeUsername) && ( //first check to hide follow button in case the profile is the activeUser profile and second one is to hide the follow button in case the visitor is not logged in\r\n                            <Form.Button \r\n                                width={45}\r\n                                onClick={() => toggleFollow()}\r\n                            >\r\n                                {followBtnText}\r\n                            </Form.Button>\r\n                            )}\r\n\r\n                    </div>\r\n                    <div className='flex small:flex-col'>\r\n                        <p><strong>{posts.length}</strong> posts</p>\r\n                        <ShowContacts \r\n                            targetContacts={'followers'} \r\n                            profileData={profileData} \r\n                            followersCount={followersCount} \r\n                        />\r\n                        <ShowContacts \r\n                            targetContacts={'following'} \r\n                            profileData={profileData} \r\n                        />\r\n                    </div>\r\n                    <p className='text-xl font-bold phone:text-sm phone:mt-2'>{profileData.fullName}</p>\r\n                </div>\r\n            </Header>\r\n        ) : (\r\n            <HeaderLoader />\r\n        )\r\n}\r\n\r\nProfile.Posts = function ProfilePosts({posts = [], setUpdateProfileData}){\r\n    const [renderPosts, setRenderPosts] = useState()\r\n    \r\n    useEffect(() => {\r\n        if (posts.length>0){\r\n            const allPosts = posts.map((post) => (\r\n                <PostFrame key={post.photoId}>\r\n                    <img src={post.imageSrc} alt={post.caption}></img>\r\n                    <Icons>\r\n                        <div className='flex'>\r\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"white\" viewBox=\"0 0 24 24\" stroke=\"white\">\r\n                                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z\" />\r\n                            </svg> \r\n                            <p>{post.likes.length}</p>\r\n                        </div>\r\n                        <div className='flex'>\r\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"white\">\r\n                                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-4.03 8-9 8a9.863 9.863 0 01-4.255-.949L3 20l1.395-3.72C3.512 15.042 3 13.574 3 12c0-4.418 4.03-8 9-8s9 3.582 9 8z\" />\r\n                            </svg> \r\n                            <p>{post.comments.length}</p>\r\n                        </div>\r\n                    </Icons>\r\n                    <OpenPost post={post} setUpdateProfileData={setUpdateProfileData}/>\r\n                </PostFrame>\r\n            ))\r\n            setRenderPosts(allPosts)\r\n        }\r\n    }, [posts])\r\n    \r\n    return posts.length > 0 ? (\r\n        <Posts>\r\n            {renderPosts}\r\n        </Posts>\r\n    ) : (\r\n        <Posts>\r\n            <h2>No posts yet</h2>\r\n        </Posts>\r\n    )\r\n}\r\n\r\nexport default Profile\r\n","import React from 'react';\r\nimport useUserData from '../hooks/useUserData'\r\nimport Header from '../components/header';\r\nimport ProfileContent from '../components/profile/Profile';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nexport default function Profile() {\r\n    const { user = {} } = useUserData()  \r\n    const {username: profileName} = useParams()\r\n\r\n    return (\r\n        <>\r\n            <Header />\r\n            <ProfileContent \r\n                username = {profileName}\r\n                activeUser = {user}\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\n// user: { userId, following, username, fullName } = {} //destructuring user elements (e.g. userId) from the destructured user. we also default this to empty obj to avoid the error of \"trying to read property of undefined\" when user is undefined at the begining as this is async call"],"sourceRoot":""}